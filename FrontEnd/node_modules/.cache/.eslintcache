[{"D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\index.js":"1","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\App.jsx":"2","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\NotFound.jsx":"3","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Home.jsx":"4","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\HomePage.jsx":"5","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Login.jsx":"6","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\FindPeople.jsx":"7","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Post.jsx":"8","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Register.jsx":"9","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\EditProfile.jsx":"10","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Join.jsx":"11","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Profile.jsx":"12","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\Routing\\PrivateRoute.jsx":"13","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\auth\\auth-help.js":"14","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\NavBar.jsx":"15","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Posts.jsx":"16","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\api\\api-post.js":"17","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\config\\chatLogic.js":"18","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Comment.jsx":"19"},{"size":195,"mtime":1732721396755,"results":"20","hashOfConfig":"21"},{"size":1512,"mtime":1732721396746,"results":"22","hashOfConfig":"21"},{"size":338,"mtime":1732721396750,"results":"23","hashOfConfig":"21"},{"size":1623,"mtime":1733058377307,"results":"24","hashOfConfig":"21"},{"size":2675,"mtime":1734696125856,"results":"25","hashOfConfig":"21"},{"size":2931,"mtime":1732866458120,"results":"26","hashOfConfig":"21"},{"size":2744,"mtime":1734693534672,"results":"27","hashOfConfig":"21"},{"size":3953,"mtime":1732721396751,"results":"28","hashOfConfig":"21"},{"size":3129,"mtime":1732721396752,"results":"29","hashOfConfig":"21"},{"size":6100,"mtime":1734695223407,"results":"30","hashOfConfig":"21"},{"size":21140,"mtime":1732721396749,"results":"31","hashOfConfig":"21"},{"size":8493,"mtime":1734690211107,"results":"32","hashOfConfig":"21"},{"size":275,"mtime":1732721396744,"results":"33","hashOfConfig":"21"},{"size":268,"mtime":1732721396745,"results":"34","hashOfConfig":"21"},{"size":6350,"mtime":1734658362183,"results":"35","hashOfConfig":"21"},{"size":5097,"mtime":1734694285132,"results":"36","hashOfConfig":"21"},{"size":8716,"mtime":1732721396745,"results":"37","hashOfConfig":"21"},{"size":1379,"mtime":1732721396754,"results":"38","hashOfConfig":"21"},{"size":1774,"mtime":1732721396746,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"orh8y1",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},"D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\index.js",[],[],"D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\App.jsx",["110","111","112","113","114","115"],[],"import React from \"react\";\r\nimport { BrowserRouter ,Routes , Route } from \"react-router-dom\";\r\nimport Home from \"./Home\"\r\nimport Login from \"./Login\"\r\nimport NotFoundPage from \"./NotFound\";\r\nimport Register from \"./Register\";\r\nimport PrivateRoute from \"../Routing/PrivateRoute\";\r\nimport Post from \"./Post\";\r\nimport HomePage from \"./HomePage\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport FindPeople from \"./FindPeople\";\r\nimport Profile from \"./Profile\";\r\nimport EditProfile from './EditProfile'\r\n\r\nimport Join from './Join'\r\n\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <>\r\n   <ToastContainer />\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home/>} />\r\n        <Route\r\n          path=\"*\"\r\n          element={\r\n            <PrivateRoute>\r\n              <Routes>\r\n          <Route path=\"/s\" element={<HomePage />} />\r\n          <Route path=\"/user/:id\" element={<Profile />} />\r\n          <Route path=\"/user/edit/:id\" element={<EditProfile />} />\r\n          <Route path=\"/chat/join\" element={<Join />} />\r\n          <Route path=\"*\" element={<NotFoundPage />} />\r\n              </Routes>\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst Public = () => <div>public</div>;\r\nconst Private = () => <div>private</div>;\r\n\r\n\r\nexport default App;","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\NotFound.jsx",[],[],"D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Home.jsx",[],[],"D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\HomePage.jsx",["116","117","118"],[],"D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Login.jsx",["119","120","121","122","123"],[],"import React,{useState , useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport { Button, ButtonGroup } from '@chakra-ui/react'\r\nimport {toast} from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\n\r\nconst Login = ({history}) => {\r\n  let [loading, setLoading] = useState(false);\r\n  let [color, setColor] = useState(\"#000000\");\r\n\r\nconst nav = useNavigate();\r\n\r\n\r\n useEffect(()=>{\r\n    if(localStorage.getItem(\"userInfo1\"))\r\n    {\r\n         nav('/s')\r\n    }\r\n  },[history])\r\n\r\n\r\nconst [data,setData] = useState({})\r\nconst handleClick = async (event) => {\r\n      event.preventDefault();\r\n    setLoading(true)\r\n    if (!data.email || !data.password) {\r\n      toast.warning('Please Fill all the Feilds',{position: toast.POSITION.TOP_LEFT})\r\n      return;\r\n    }\r\n\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n        \r\n    };\r\n    try{\r\n    const response = await fetch('http://localhost:4000/api/users/login', requestOptions);\r\n    const Data = await response.json();\r\n    console.log(Data);\r\n    \r\n    if(Data.success){\r\n    localStorage.setItem(\"userInfo1\", JSON.stringify(Data));\r\n    toast.success('Successful Login',{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n    setLoading(false)\r\n    nav('/s')\r\n    }\r\n  else \r\n  {\r\n    throw Data\r\n  }\r\n  }catch(Data){\r\n      console.log(Data)\r\n      toast.warning(Data.errors,{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n      setLoading(false)\r\n\r\n  }\r\n    \r\n  }\r\nfunction handleChange(event)\r\n  {\r\n       const {name,value} = event.target;\r\n\r\n       setData((pre)=>{\r\n         return {\r\n         ...pre,\r\n         [name]:value,\r\n\r\n         }\r\n       })\r\n\r\n  }\r\n\r\n  return (\r\n<div class=\"container mt-5\">\r\n  <h1>Login</h1>\r\n  <PulseLoader  color={color} loading={loading} size={15} />\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <form action=\"/login\" method=\"POST\">\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email</label>\r\n              <input onChange={handleChange} type=\"email\" class=\"form-control\" name=\"email\"/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"password\">Password</label>\r\n              <input onChange={handleChange}  type=\"password\" class=\"form-control\" name=\"password\"/>\r\n              <p>\r\n        <Link to=\"/register\">Don't Have an acount Register</Link>\r\n      </p>\r\n            </div>\r\n            <button onClick={handleClick} class=\"btn btn-dark\">Login</button>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-sm-4\">\r\n      \r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n  )\r\n}\r\nexport default Login","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\FindPeople.jsx",["124"],[],"import React from 'react'\r\nimport auth from './../auth/auth-help'\r\nimport jwt1 from 'jwt-decode' // import dependency\r\nimport { useEffect } from 'react'\r\nimport { findPeoplee } from '../api/api-post'\r\nimport { useState } from 'react'\r\nimport { follow } from '../api/api-post'\r\nimport { useNavigate } from 'react-router'\r\nimport {toast} from 'react-toastify';\r\n\r\nconst FindPeople = () => {\r\n    const nav = useNavigate()\r\n    const abortController = new AbortController()\r\n    const signal = abortController.signal\r\n\r\n    const [values, setValues] = useState({\r\n    users: [],\r\n    open: false,\r\n    followMessage: 'ERROR'\r\n  })\r\n\r\n const jwt = auth.isAuthenticated()\r\n const user1 = jwt1(jwt.token);\r\n\r\n \r\n   useEffect(()=>{\r\n\r\n      findPeoplee(\r\n         {\r\n        userId : user1.id\r\n        },\r\n        {\r\n          t:jwt.token\r\n        },signal,\r\n        ).then((data)=>{\r\n            if(data)\r\n               setValues({...values,users:data})\r\n        })\r\n\r\n   },[])\r\n\r\nconst clickFollow = (user, index) => {\r\n\r\n const jwt = auth.isAuthenticated()\r\n const user1 = jwt1(jwt.token);\r\n console.log(index)\r\n\r\n    follow({\r\n      userId: user1.id\r\n    }, {\r\n      t: jwt.token\r\n    }, user._id).then((data) => {\r\n        console.log(data)\r\n        let toFollow = values.users\r\n        toFollow.splice(index, 1)\r\n        \r\n        setValues({...values, users: toFollow, open: true, followMessage:`Following ${user.name}!`})\r\n        toast.success(`Following ${user.name}!`,{position: toast.POSITION.TOP_RIGHT,autoClose:1000})\r\n\r\n        \r\n    })\r\n  }\r\n   console.log(values.users)\r\n\r\n\r\n  return (\r\n    <>\r\n<div className=\"right col-lg-4 d-lg-block d-sm-none d-none border rounded border-info border_radius d-flex flex-column  p-3 mt-3 white border mt-5 \" style={{ backgroundColor: '#0d0d0d' }}>\r\n  <div>\r\n                    <p class=\"fw-bold fs-5\" style={{ color: '#ffffff' }}>Suggestions for you</p>\r\n  </div>\r\n  <hr />\r\n  <div className=\"max_height overflow-auto\">\r\n\r\n  {values.users.map((user2,idx)=>{\r\n     return (\r\n      <div className=\"d-flex align-items-center p-2  mb-3\"  style={{\r\n        border: '1px solid magenta',\r\n        borderRadius: '8px',\r\n      }}>\r\n      <div>\r\n        <img\r\n          src=\"images/user (3).png\"\r\n          alt=\"profile\"\r\n          style={{ width: 50 ,height:50}}\r\n          className=\"me-3\"\r\n        />\r\n      </div>\r\n      <h6 onClick={()=>{\r\n           nav('/user/'+user2._id)\r\n      }} className=\" fw-bold\" style={{ color: '#ffffff' }}>{user2.name}</h6>\r\n      <i onClick={()=>{\r\n        clickFollow(user2,idx)\r\n      }} className=\"fa-solid fa-user-plus ms-auto fs-4\" style={{ color: '#ffffff' }}/>\r\n    </div>\r\n     \r\n     )\r\n  })}\r\n  </div>\r\n</div>\r\n\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default FindPeople","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Post.jsx",["125","126","127"],[],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport auth from './../auth/auth-help'\r\nimport jwt1 from 'jwt-decode' // import dependency\r\nimport { useEffect } from 'react';\r\nimport {create} from \"../api/api-post\"\r\nimport {toast} from 'react-toastify';\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport BarLoader from \"react-spinners/PulseLoader\";\r\nimport axios from 'axios';\r\nimport { useReducer } from 'react';\r\n\r\nconst Post = (props1) => {\r\n\r\n  const [Text, setText] = useState('');\r\n  const [pic, setPic] = useState();\r\n  const [image,setImage]=useState()\r\n  const [picLoading, setPicLoading] = useState(false);\r\n  const [picLoading1, setPicLoading1] = useState(false);\r\n  const jwt = auth.isAuthenticated()\r\n  const user = (jwt1(jwt.token))\r\n\r\n\r\n  \r\n\r\nconst submitHandler = async (props) => {\r\n\r\nsetPicLoading(true);\r\n\r\n  if(!Text &&!pic)\r\n  {\r\n         toast.warning('Please Type anything ',{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n          setPicLoading(false);\r\n         return \r\n  }\r\n\r\n  try{\r\nconst PostData = {\r\n         Text,\r\n          pic,\r\n          user,\r\n      } \r\n create({\r\n      userId: user.id\r\n    }, {\r\n      t: jwt.token\r\n    }, PostData).then((d) => {\r\n      \r\n        setPic('')\r\n        setText('')\r\n       props1.onAdd1(d)\r\n          \r\n    })\r\n     setText('')\r\n     document.getElementById('file').value = \"\";\r\n      setPicLoading(false);\r\n    } catch (error) {\r\n          setPicLoading(false);\r\n          console.log(error)\r\n          toast.error('SomeThing Wrong',{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n      };\r\n      setPicLoading(false);\r\n    \r\n  };\r\n\r\n  const ImageHander=(pics)=>\r\n  {\r\n     setPicLoading1(true)\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      setImage(pics)\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"dwjy0lwss\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dwjy0lwss/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading1(false);\r\n          return \r\n        })\r\n        .catch((err) => {\r\n          toast.error('Some Thing Wron1g',{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n          setPicLoading1(false);\r\n        });\r\n    } else {\r\n          toast.error('Photo is invalid',{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n      setPicLoading1(false);\r\n      return;\r\n    }\r\n  };\r\n    \r\n\r\n  return (\r\n    <section className=\"post border_radius border-info border_radius white overflow-hidden pb-4 border position-relative\">\r\n  <div className=\"d-flex align-items-center p-3 ps-4  mb-0\">\r\n  </div>\r\n  <div className=\"\">\r\n    <form action=\"\" className=\" d-flex flex-column ms-4 \">\r\n      <div>\r\n        <textarea\r\n          value={Text}\r\n          name=\"\"\r\n          id=\"\"\r\n          cols={30}\r\n          rows={2}\r\n          onChange={(e)=>setText(e.target.value)}\r\n          className=\"outline w-75 \"\r\n          placeholder={\"Share your thoughts \"+user.name}\r\n        />\r\n        <button  onClick={submitHandler} className=\"btn btn-primary btn-md ms-4 px-4 b-post\">\r\n          Post\r\n        </button>\r\n        <PulseLoader  loading={picLoading} size={15} />\r\n      </div>\r\n      <div className=\"image-upload\">\r\n        <label htmlFor=\"file-input\">\r\n          <i className=\"fa-solid fa-camera-retro fs-3 mt-2 blue\" />\r\n        </label>\r\n        <input id=\"file-input\"  onChange={(e)=>ImageHander(e.target.files[0])} \r\n            name=\"photo\" accept=\"image/*\" type=\"file\" className=\"d-none\" />\r\n        <BarLoader loading={picLoading1} size={15} />\r\n      </div>\r\n       {pic &&<p className='mb-0 mt-0'>{ image.name}</p>}\r\n    </form>\r\n  </div>\r\n</section>\r\n\r\n\r\n       \r\n    )\r\n}\r\nexport default Post","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Register.jsx",["128","129"],[],"import React ,{useState,useEffect}from 'react'\r\nimport {toast} from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Register = ({history}) => {\r\nlet [loading, setLoading] = useState(false);\r\nlet [color, setColor] = useState(\"#000000\");\r\n\r\nconst nav = useNavigate();\r\n\r\n useEffect(()=>{\r\n    if(localStorage.getItem(\"userInfo1\"))\r\n    {\r\n         nav('/s')\r\n    }\r\n  },[history])\r\n  const [data,setData] = useState({})\r\n\r\n  function handleChange(event)\r\n  {\r\n       const {name,value} = event.target;\r\n\r\n       setData((pre)=>{\r\n         return {\r\n         ...pre,\r\n         [name]:value,\r\n\r\n         }\r\n       })\r\n\r\n  }\r\n\r\n  async function handleClick(event){\r\n    //console.log(data);\r\n    event.preventDefault();\r\n    setLoading(true)\r\n\r\n    const newDate = data;\r\n    if (!data.name || !data.password|| !data.email ||!data.password2) {\r\n      toast.warning('Please Fill all the Feilds',{position: toast.POSITION.TOP_LEFT})\r\n          setLoading(false)\r\n      return;\r\n    }\r\n    console.log(newDate)\r\n\r\n   const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n        \r\n    };\r\n    \r\n    const response = await fetch('http://localhost:4000/api/users/register', requestOptions)\r\n    const Data = await response.json();\r\n\r\n    if(!Data.error){\r\n    toast.success('Successful Register',{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n    setLoading(false)\r\n    nav('/login')\r\n    }\r\n    else \r\n    {\r\n    toast.warning(Data.error,{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n    setLoading(false)\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  return (\r\n<div class=\"container mt-5\">\r\n  <h1>Register</h1>\r\n  <PulseLoader  color={color} loading={loading} size={15} />\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <form>\r\n           <div class=\"form-group\">\r\n              <label for=\"name\">Name</label>\r\n              <input onChange={handleChange} type=\"name\" class=\"form-control\" name=\"name\"/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email</label>\r\n              <input onChange={handleChange} type=\"email\" class=\"form-control\" name=\"email\"/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"password\">Password</label>\r\n              <input onChange={handleChange} type=\"password\" class=\"form-control\" name=\"password\"/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"password\">Confirm PassWord</label>\r\n              <input onChange={handleChange} type=\"password\" class=\"form-control\" name=\"password2\"/>\r\n              <p>\r\n             <Link to=\"/login\">Have an acount Login</Link>\r\n            </p>\r\n            </div>\r\n            <button onClick={handleClick} class=\"btn btn-dark\">Register</button>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n  )\r\n}\r\nexport default Register","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\EditProfile.jsx",["130","131","132","133","134","135","136"],[],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport auth from './../auth/auth-help'\r\nimport jwt1 from 'jwt-decode' // import dependency\r\nimport logo from \"../images/IMG-20201113-WA0051.jpg\"; // with import\r\nimport { read } from '../api/api-post';\r\nimport {toast} from 'react-toastify';\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport BarLoader from \"react-spinners/PulseLoader\";\r\nimport { useParams } from \"react-router\";\r\nimport {update} from \"../api/api-post\"\r\nimport NavBar from './NavBar';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst EditProfile = () => {\r\n\r\nconst nav=useNavigate();\r\n    const params = useParams();\r\n    console.log(params)\r\n\r\n  const [picLoading, setPicLoading] = useState(false);\r\n  const [picLoading1, setPicLoading1] = useState(false);\r\n   const [values, setValues] = useState({\r\n  })\r\n\r\n  const jwt = auth.isAuthenticated()\r\n  const user1 = jwt1(jwt.token);\r\n\r\n  console.log(user1);\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n     read( {userId: user1.id\r\n    },{\r\n      t: jwt.token\r\n    },).then((data)=>{\r\n        if(data)\r\n        console.log(data)\r\n        setValues({...values,name:data.name , email:data.email , image:data.image , about:data.about,update:data.updated});\r\n    })\r\n    \r\n  },[])\r\n\r\n\r\n\r\n\r\nconst ImageHander=(pics)=>\r\n  {\r\n     setPicLoading1(true)\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"dwjy0lwss\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dwjy0lwss/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setValues({...values,image:data.url.toString()})\r\n          console.log(data.url.toString());\r\n          setPicLoading1(false);\r\n          return \r\n        })\r\n        .catch((err) => {\r\n          toast.error('Some Thing Wron1g',{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n          setPicLoading1(false);\r\n        });\r\n    } else {\r\n          toast.error('Photo is invalid',{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n      setPicLoading1(false);\r\n      return;\r\n    }\r\n  };\r\n    \r\n  const clickSubmit = () => {\r\n    update({\r\n      userId: params.id\r\n    }, {\r\n      t: jwt.token\r\n    }, values).then((data) => {\r\n      if (data) {\r\n        {\r\n       toast.success('Data Updated',{position: toast.POSITION.TOP_LEFT,autoClose:1000})\r\n       nav('/user/'+user1.id)\r\n\r\n        }\r\n      } \r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n     <NavBar/>\r\n   \r\n  {/*-------------------------------------------------------------- body -------------------------------------------------------------*/}\r\n \r\n  <div className=\"d-flex flex-column py-5 align-items-center mt-5\">\r\n    <div className=\"d-flex flex-column align-items-center flex-lg-row align-items-lg-start m-auto\">\r\n      <div className=\"position-relative\">\r\n        <img\r\n          src={values.image}\r\n          alt=\"\"\r\n          className=\"rounded\"\r\n          style={{ width: 280 }}\r\n        />\r\n        <BarLoader loading={picLoading1} size={15} />\r\n        <label htmlFor=\"file-input\">\r\n          <i className=\"fa-solid fa-camera fs-2 camera_icon\" />\r\n        </label>\r\n       <input id=\"file-input\" onChange={(e)=>ImageHander(e.target.files[0])} \r\n               accept=\"image/*\" name=\"photo\"\r\n               type=\"file\" className=\"d-none\" />\r\n      </div>\r\n      <div style={{ width: 450 }} className=\"px-5 pt-4 pt-lg-0\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"formGroupExampleInput\" className=\"form-label\" style={{ color: '#fff' }}>\r\n            Name\r\n          </label>\r\n          <input\r\n            onChange={(e)=>setValues({...values,name:e.target.value})}\r\n            value={values.name}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"formGroupExampleInput\"\r\n            placeholder=\"name...\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"formGroupExampleInput2\" className=\"form-label\" style={{ color: '#fff' }}>\r\n            About\r\n          </label>\r\n          <input\r\n           value={values.about!=''? values.about:''}\r\n           onChange={(e)=>setValues({...values,about:e.target.value})}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"formGroupExampleInput2\"\r\n            placeholder=\"about..\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"formGroupExampleInput3\" className=\"form-label\" style={{ color: '#fff' }}>\r\n            Email\r\n          </label>\r\n          <input\r\n            value={values.email}\r\n           onChange={(e)=>setValues({...values,email:e.target.value})}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"formGroupExampleInput3\"\r\n            placeholder=\"email..\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"formGroupExampleInput4\" className=\"form-label\" style={{ color: '#fff' }}>\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            value={values.password}\r\n            onChange={(e)=>setValues({...values,password:e.target.value})}\r\n            className=\"form-control\"\r\n            id=\"formGroupExampleInput4\"\r\n            placeholder=\"password..\"\r\n          />\r\n        </div>\r\n        <div className=\" d-flex justify-content-center\">\r\n          <button onClick={()=>{nav(-1)}} type=\"button\" className=\"btn btn-dark mt-2 px-4\">\r\n            Back To Profile\r\n          </button>\r\n          <button onClick={clickSubmit} type=\"button\" className=\"btn btn-primary ml-2 mt-2 px-4\">\r\n            <i className=\"fa-solid fa-pen me-2\" />\r\n            Update\r\n          </button>\r\n        </div>\r\n        <p className=\"mt-2 d-flex justify-content-center\">last update : {new Date(values.update).toLocaleString()} </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n  )\r\n}\r\n\r\nexport default EditProfile","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Join.jsx",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],[],"import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport Posts from \"./Posts\";\r\nimport auth from \"./../auth/auth-help\";\r\nimport jwt1 from \"jwt-decode\"; // import dependency\r\nimport { getSender } from \"../config/chatLogic\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport \"./chat.css\";\r\nimport { io } from \"socket.io-client\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { searchuser } from \"../api/api-post\";\r\nimport { getSenderFull } from \"../config/chatLogic\";\r\nimport FindPeople from \"./FindPeople\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getChat } from \"../api/api-post\";\r\nimport { setMessage } from \"../api/api-post\";\r\nimport { fetchChats } from \"../api/api-post\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport MoonLoader from \"react-spinners/MoonLoader\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { getMessage } from \"../api/api-post\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/chatLogic\";\r\n\r\nvar socket;\r\nvar selectedChatCompare;\r\nconst Join = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [value1, setValue1] = useState({});\r\n  const [chats, setChats] = useState([]);\r\n  const [notification, setNotification] = useState([]);\r\n  const [chat, setChat] = useState([]);\r\n  const [selectChat, setSelectChat] = useState(false);\r\n  const [socketcon, Setsocketc] = useState(false);\r\n  const [loading1, Setloading1] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [lastM, setLastM] = useState([]);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const jwt = auth.isAuthenticated();\r\n  const user1 = jwt1(jwt.token);\r\n  const loading = searchResult.length != 0 && open;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const [l, sl] = useState(\"\");\r\n  const open1 = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = (chat) => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleClose1 = (notiy) => {\r\n    setAnchorEl(null);\r\n    setSelectChat(true);\r\n    setChat(notiy.chat);\r\n    selectedChatCompare = chat;\r\n    fetchMessages();\r\n    setNotification(notification.filter((e) => e !== notiy));\r\n    // Get(chat)\r\n  };\r\n  function padTo2Digits(num) {\r\n    return String(num).padStart(2, \"0\");\r\n  }\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectChat) return;\r\n\r\n    try {\r\n      await getMessage(\r\n        {\r\n          userId: user1.id,\r\n        },\r\n        {\r\n          t: jwt.token,\r\n        },\r\n        chat._id\r\n      ).then((data) => {\r\n        setMessages(data);\r\n        socket.emit(\"join chat\", chat._id);\r\n        console.log(data);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const Get = async (v) => {\r\n    if (!v) return;\r\n    Setloading1(true);\r\n    setValue1(v);\r\n    await getChat(\r\n      {\r\n        userId: user1.id,\r\n      },\r\n      {\r\n        t: jwt.token,\r\n      },\r\n      v._id\r\n    ).then((data) => {\r\n      if (data) {\r\n        setSelectChat(true);\r\n        setChat(data);\r\n        selectedChatCompare = chat;\r\n        fetchMessages();\r\n        Setloading1(false);\r\n      }\r\n    });\r\n  };\r\n  const PostMessage = async () => {\r\n    if (!newMessage) return;\r\n    setNewMessage(\"\");\r\n    socket.emit(\"stop typing\", chat._id);\r\n\r\n    await setMessage(\r\n      { id: user1.id, chatId: chat._id, content: newMessage },\r\n      {\r\n        t: jwt.token,\r\n      }\r\n    ).then((data) => {\r\n      socket.emit(\"new message\", data);\r\n      setMessages([...messages, data]);\r\n      setFetchAgain(!fetchAgain);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchuser(\r\n      {\r\n        userId: user1.id,\r\n      },\r\n      {\r\n        t: jwt.token,\r\n      },\r\n      {\r\n        search: search,\r\n      }\r\n    ).then((data) => {\r\n      if (search != \"\") setSearchResult(data);\r\n      else setSearchResult([]);\r\n    });\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    selectedChatCompare = chat;\r\n  }, [chat]);\r\n\r\n  useEffect(() => {\r\n    console.log(user1);\r\n    socket = io(\"http://localhost:4000/\");\r\n    socket.emit(\"setup\", user1);\r\n    socket.on(\"connected\", () => Setsocketc(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchChats(\r\n      {\r\n        userId: user1.id,\r\n      },\r\n      {\r\n        t: jwt.token,\r\n      }\r\n    ).then((data) => {\r\n      if (data) setChats(data);\r\n      console.log(data);\r\n    });\r\n  }, [fetchAgain]);\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n        setFetchAgain(!fetchAgain);\r\n      }\r\n    });\r\n  });\r\n\r\n  const [ChatColor, setChatColor] = useState(\"white\");\r\n  const [Color3, setColor3] = useState(\"white\");\r\n  const [TextColor, setTextC] = useState(\"black\");\r\n  const [Color4, setColor4] = useState(\"#dee2e6\");\r\n  const [STextColor, setStext] = useState(\"gray\");\r\n  const [backim, setbsckim] = useState(\"123.png\");\r\n  const [fchatc, setf] = useState(\"#b8ebb4\");\r\n  const [schatc, setsc] = useState(\"white\");\r\n  const [ima, setim] = useState(\"123.png\");\r\n\r\n  const change = (mode) => {\r\n    if (mode == \"dark\") {\r\n      setChatColor(\"#444F5A\");\r\n      setColor3(\"#222831\");\r\n      setTextC(\"white\");\r\n      setColor4(\"#222831\");\r\n      setStext(\"#D8D3CD\");\r\n      setbsckim(\"jbVvEcAi.jpg\");\r\n      setf(\"#274528\");\r\n      setsc(\"#393E46\");\r\n      setim(\"jbVvEcAi.jpg\");\r\n    } else {\r\n      setChatColor(\"white\");\r\n      setColor3(\"white\");\r\n\r\n      setim(\"123.png\");\r\n      setTextC(\"black\");\r\n      setColor4(\"#dee2e6\");\r\n      setStext(\"gray\");\r\n      setbsckim(\"123.png\");\r\n      setf(\"#b8ebb4\");\r\n      setsc(\"white\");\r\n    }\r\n  };\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketcon) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", chat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", chat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n  const messagesEndRef = useRef();\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current &&\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      PostMessage();\r\n    }\r\n  }\r\n  useEffect(scrollToBottom, [messages]);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <section className=\"vh-100 d-flex grey2\">\r\n          <div\r\n            className=\"col-4 p-0 h-100 \"\r\n            style={{ backgroundColor: `${Color4}` }}\r\n          >\r\n            <div\r\n              className=\"justify-content-between border p-3  d-flex align-items-start grey\"\r\n              style={{ backgroundColor: `${Color3}`, color: `${TextColor}` }}\r\n            >\r\n              <h5 className=\"font-weight-bold ms-3 mt-1\">Chats</h5>\r\n\r\n              <div className=\"rounded input-group m-0 ps-3 pe-5\">\r\n                <Stack spacing={1} sx={{ width: 100 }}>\r\n                  <Autocomplete\r\n                    className=\"rounded\"\r\n                    size=\"small\"\r\n                    id=\"asynchronous-demo\"\r\n                    sx={{ width: 250 }}\r\n                    options={searchResult}\r\n                    loading={loading}\r\n                    open={open}\r\n                    onOpen={() => {\r\n                      setOpen(true);\r\n                    }}\r\n                    onClose={() => {\r\n                      setOpen(false);\r\n                      //setSearchResult([])\r\n                    }}\r\n                    onChange={(event, value) => Get(value)} // prints the selected value\r\n                    autoHighlight\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <Box\r\n                        component=\"li\"\r\n                        sx={{ \"& > img\": { mr: 2, flexShrink: 0 } }}\r\n                        {...props}\r\n                      >\r\n                        <img\r\n                          className=\"rounded-circle me-3\"\r\n                          loading=\"lazy\"\r\n                          width=\"30\"\r\n                          height=\"30\"\r\n                          src={option.image}\r\n                          //srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\r\n                          alt=\"\"\r\n                        />\r\n                        {option.name}\r\n                      </Box>\r\n                    )}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        className={\"rounded bg-white\"}\r\n                        sx={{ p: \"0px\" }}\r\n                        size=\"small\"\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        {...params}\r\n                        placeholder=\"Search To Chat\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <React.Fragment>\r\n                              {loading ? (\r\n                                <CircularProgress color=\"inherit\" size={20} />\r\n                              ) : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </React.Fragment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Stack>\r\n              </div>\r\n              <div className={\"ml-2\"}>\r\n                <Stack\r\n                  spacing={4}\r\n                  direction=\"row\"\r\n                  sx={{ color: \"action.active\" }}\r\n                >\r\n                  <Badge\r\n                    id=\"fade-button\"\r\n                    aria-controls={open1 ? \"fade-menu\" : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open1 ? \"true\" : undefined}\r\n                    onClick={handleClick}\r\n                    color=\"secondary\"\r\n                    badgeContent={notification.length}\r\n                  >\r\n                    <MailIcon color=\"primary\" fontSize=\"large\" />\r\n                  </Badge>\r\n                </Stack>\r\n                <Menu\r\n                  id=\"fade-menu\"\r\n                  MenuListProps={{\r\n                    \"aria-labelledby\": \"fade-button\",\r\n                  }}\r\n                  anchorEl={anchorEl}\r\n                  open={open1}\r\n                  onClose={handleClose}\r\n                  TransitionComponent={Fade}\r\n                >\r\n                  {notification.length == 0 ? (\r\n                    <MenuItem onClick={handleClose}>No Message</MenuItem>\r\n                  ) : (\r\n                    <div>\r\n                      {notification.map((notify) => {\r\n                        return (\r\n                          <MenuItem onClick={() => handleClose1(notify)}>\r\n                            \"New Message from : \"\r\n                            {getSender(user1, notify.chat.users)}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                </Menu>\r\n              </div>\r\n            </div>\r\n            <div className=\"justify-content-center scroll overflow-auto px-3 mt-2\">\r\n            <div className=\" mb-2\">\r\n              <i\r\n                className={\"fa fa-moon-o btn btn-dark mb-1 \"}\r\n                onClick={() => change(\"dark\")}\r\n              >\r\n                dark\r\n              </i>\r\n              <button\r\n                className={\"fa fa-moon-o btn btn-light mb-1\"}\r\n                onClick={() => change(\"light\")}\r\n              >\r\n                light\r\n              </button>\r\n              </div>\r\n              {chats.map((chat) => {\r\n                return (\r\n                  <div>\r\n                  {chat.latestMessage &&\r\n                  <div\r\n                    className=\"d-flex text-white align-items-center justify-content-between px-3 py-1 hovering shadow-sm  mb-1 \r\n              border-radius\"\r\n                    onClick={() => {\r\n                      Setloading1(true);\r\n                      setTimeout(function () {\r\n                        Setloading1(false);\r\n                        setSelectChat(true);\r\n                        setValue1(getSenderFull(user1, chat.users));\r\n                        setChat(chat);\r\n                      }, 700);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: `${ChatColor}`,\r\n                    }}\r\n                  >\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <img\r\n                        src={getSenderFull(user1, chat.users).image}\r\n                        alt=\"\"\r\n                        className=\"rounded-circle me-3\"\r\n                        width=\"50px\"\r\n                        height=\"50px\"\r\n                      />\r\n                      <div className=\"mt-3\">\r\n                        <h6\r\n                          style={{ color: `${TextColor}` }}\r\n                          className=\"m-0 text-lg-left font-weight-bold\"\r\n                        >\r\n                          {getSender(user1, chat.users)}\r\n                        </h6>\r\n                        {chat.latestMessage ? (\r\n                          <p style={{ color: `${STextColor}` }}>\r\n                            {chat.latestMessage.content}\r\n                          </p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"\">\r\n                      {chat.latestMessage ? (\r\n                        <p\r\n                          className=\"m-0 mb-2\"\r\n                          style={{ color: `${STextColor}` }}\r\n                        >\r\n                          {new Date(\r\n                            chat.latestMessage.createdAt\r\n                          ).toLocaleTimeString(\"en-US\", {\r\n                            // en-US can be set to 'default' to use user's browser settings\r\n                            hour: \"2-digit\",\r\n                            minute: \"2-digit\",\r\n                          })}\r\n                        </p>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          {selectChat ? (\r\n            <div className=\"col-8 h-100 p-0 \">\r\n              <div\r\n                style={{\r\n                  backgroundColor: `${Color3}`,\r\n                }}\r\n                className=\"d-flex ps-3 pe-4 py-3 border justify-content-between\"\r\n              >\r\n                <div className=\"d-flex\">\r\n                  <img\r\n                    src={value1.image}\r\n                    alt=\"\"\r\n                    className=\"rounded-circle me-2\"\r\n                    width=\"40px\"\r\n                    height=\"40px\"\r\n                  />\r\n                  <div className=\"\">\r\n                    <h6\r\n                      style={{\r\n                        color: `${TextColor}`,\r\n                      }}\r\n                      className=\"font-weight-bold mt-2\"\r\n                    >\r\n                      {value1.name}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n                <i\r\n                  onClick={() => setSelectChat(false)}\r\n                  className=\"fa fa-window-close fs-4 text-secondary\"\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  backgroundImage: `url(../images/${backim})`,\r\n                }}\r\n                className=\"scroll2 overflow-auto mb-0 px-5 py-3\"\r\n              >\r\n                {messages &&\r\n                  messages.map((m, i) => (\r\n                    <div style={{ display: \"flex\" }} key={m._id}>\r\n                      <p\r\n                        className=\"d-inline-block rounded\"\r\n                        style={{\r\n                          color: `${TextColor}`,\r\n                          backgroundColor: `${\r\n                            m.sender._id === user1.id ? fchatc : schatc\r\n                          }`,\r\n                          marginLeft: isSameSenderMargin(\r\n                            messages,\r\n                            m,\r\n                            i,\r\n                            user1.id\r\n                          ),\r\n                          marginTop: isSameUser(messages, m, i, user1.id)\r\n                            ? 3\r\n                            : 10,\r\n                          borderRadius: \"20px\",\r\n                          marginBottom: \"0px\",\r\n                          padding: \"5px 15px\",\r\n                          maxWidth: \"75%\",\r\n                        }}\r\n                      >\r\n                        {m.content}\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                {istyping ? (\r\n                  <div\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                    className=\"d-flex justify-content-end mt-4\"\r\n                  >\r\n                    <div className=\"circle me-1 circle1\" />\r\n                    <div className=\"circle me-1 circle2\" />\r\n                    <div className=\"circle me-1 circle3\" />\r\n                    <div className=\"circle me-1 circle4\" />\r\n                  </div>\r\n                ) : null}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n              <div\r\n                className=\"d-flex align-items-center py-2 justify-content-center px-4 \"\r\n                style={{\r\n                  backgroundColor: `${ChatColor}`,\r\n                }}\r\n              >\r\n                <i className=\"fa-regular fa-face-laugh-beam fs-4 me-3 text-secondary\" />\r\n                <i className=\"fa-solid fa-paperclip fs-4 me-3 text-secondary\" />\r\n                <input\r\n                  style={{\r\n                    backgroundColor: `${Color4}`,\r\n                    color:`${TextColor}`\r\n                  }}\r\n                  value={newMessage}\r\n                  onChange={typingHandler}\r\n                  type=\"text\"\r\n                  className=\"form-control grey p-2\"\r\n                  placeholder=\"type a message\"\r\n                  aria-label=\"First name\"\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n                <i\r\n                  onClick={PostMessage}\r\n                  aria-hidden=\"true\"\r\n                  className=\"fa fa-paper-plane bg-primary green px-4 py-2 ms-3 rounded\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                backgroundImage: `url(../images/${ima})`,\r\n              }}\r\n              className=\"scroll2 col-8 h-100 p-0 bg-black\"\r\n            >\r\n              {!loading1 ? (\r\n                <h1 className=\"f align-center\" style={{ color: TextColor }}>\r\n                  {user1.name}, Select any Chat\r\n                </h1>\r\n              ) : (\r\n                <GridLoader className=\"f align-center\" color=\"#3667d6\" />\r\n              )}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </div>\r\n\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Profile.jsx",["168","169","170","171","172"],[],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { read, unfollow } from \"../api/api-post\";\r\nimport Posts from \"./Posts\";\r\nimport auth from \"./../auth/auth-help\";\r\nimport jwt1 from \"jwt-decode\";\r\nimport { useParams } from \"react-router\";\r\nimport { follow } from \"../api/api-post\";\r\nimport {toast} from 'react-toastify';\r\n// import dependency\r\nimport { checkFollow } from \"../api/api-post\";\r\nimport { getFeedUser } from \"../api/api-post\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport \"./profile.css\";\r\nimport logo from \"../images/IMG-20201113-WA0051.jpg\"; // with import\r\nimport NavBar from \"./NavBar\";\r\n\r\n\r\nconst Profile = () => {\r\n  const params = useParams();\r\n  console.log(params.id);\r\n  const nav = useNavigate();\r\n\r\n  const [value, SetValues] = useState({\r\n    user: { following: [], followers: [] },\r\n    following: false,\r\n  });\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const jwt = auth.isAuthenticated();\r\n  const user1 = jwt1(jwt.token);\r\n\r\n  useEffect(() => {\r\n    read({ userId: params.id }, { t: jwt.token }).then((res) => {\r\n      if (res.name) {\r\n        let following = checkFollow(res, user1.id);\r\n        SetValues({ ...value, user: res, following: following });\r\n        loadPost(res._id);\r\n      }\r\n    });\r\n  }, [user1.id]);\r\n  const loadPost = (user) => {\r\n    getFeedUser(\r\n      {\r\n        userId: user,\r\n      },\r\n      {\r\n        t: jwt.token,\r\n      }\r\n    ).then((data) => setPosts(data));\r\n  };\r\nconst clickfollow  = ()=> {\r\n\r\n      let callApi = value.following==false ? follow : unfollow\r\n       callApi({userId : user1.id} ,\r\n        {t:jwt.token},\r\n           value.user._id\r\n        ).then((data)=>{\r\n          if(data)\r\n          {\r\n            console.log(data)\r\n            if(!value.following)\r\n             toast.success(`following ${value.user.name}!`,{position: toast.POSITION.TOP_RIGHT,autoClose:1000})\r\n             else\r\n             {\r\n             toast.warn(`unfollowing ${value.user.name}!`,{position: toast.POSITION.TOP_RIGHT,autoClose:1000})\r\n             }\r\n            SetValues({...value, following: !value.following})\r\n          }\r\n        })\r\n   }\r\n  console.log(posts);\r\n  console.log(value);\r\n  \r\n  return (\r\n<div>\r\n  <NavBar/>\r\n      <section className=\"  container mt-3  py-5 rounded px-5\">\r\n      <div class=\"d-flex mb-5 mt-4 ms-lg-5 ps-lg-5 ms-0 ps-0\">\r\n        <div class=\"me-md-5 me-3 ms-lg-5 ms-0\">\r\n            <img src={value.user.image} alt=\"\"  className=\"rounded-circle profile_img border border-light border-3\"/>\r\n        </div>\r\n\r\n        <div class=\" w-50\">\r\n            <h3 class=\"mt-3 mb-4\">{value.user.name}</h3>\r\n            <div class=\"d-flex mb-3 mt-2 \">\r\n                <div class=\"d-flex me-4\">\r\n                    <p class=\"me-1\">{posts.length}</p>\r\n                    <p>posts</p>\r\n                </div>\r\n\r\n                <div class=\"d-flex me-4\">\r\n                    <p class=\"me-1\">{value.user.followers.length}</p>\r\n                    <p>followers</p>\r\n                </div>\r\n\r\n                <div class=\"d-flex me-4\">\r\n                    <p class=\"me-1\">{value.user.following.length}</p>\r\n                    <p>following</p>\r\n                </div>\r\n            </div>\r\n              {user1.id===params.id ? (<button onClick={()=>{\r\n                nav('/user/edit/'+user1.id)\r\n              }} type=\"button\" className=\"btn btn-dark\">\r\n                <i className=\"fa-solid fa-pen me-2\" />\r\n                Edit profile\r\n              </button>) : null}\r\n              {user1.id!=params.id ?\r\n              value.following===false?(<button onClick={clickfollow} type=\"button\" className=\"ml-2 btn btn-success me-3\">\r\n                <i className=\"fa-solid fa fa-user-plus me-2\"></i>\r\n                Follow\r\n            </button>) : (<button onClick={clickfollow} type=\"button\" className=\"ml-2 btn btn-danger me-3\">\r\n                <i className=\"fa-solid fa fa-user-plus me-2\"></i>\r\n                Unfollow\r\n            </button>) :null}\r\n                \r\n        </div>\r\n\r\n    </div>\r\n        {/* profile & cover img */}\r\n        <section className=\"\">\r\n         <ul class=\"nav nav-pills mt-5 mt-lg-0 ms-lg-5 ms-0 \" id=\"pills-tab\" role=\"tablist\">\r\n        <li class=\"nav-item ms-xl-5 ms-0 ps-lg-4 ps-0\" role=\"presentation\">\r\n          <button class=\"nav-link active ms-4\" id=\"pills-home-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-home\" type=\"button\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\">posts</button>\r\n        </li>\r\n        <li class=\"nav-item \" role=\"presentation\">\r\n          <button class=\"nav-link\" id=\"pills-profile-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-profile\" type=\"button\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\">followers</button>\r\n        </li>\r\n        <li class=\"nav-item \" role=\"presentation\">\r\n          <button class=\"nav-link\" id=\"pills-contact-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#pills-contact\" type=\"button\" role=\"tab\" aria-controls=\"pills-contact\" aria-selected=\"false\">following</button>\r\n        </li>\r\n      </ul>\r\n      <div class=\"tab-content p-4\" id=\"pills-tabContent\">\r\n              <div class=\"tab-pane fade show active\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\" tabindex=\"0\">\r\n                          <div class=\"left  col-lg-9 col-sm-12  col-sm-12  h-100  border_radius mt-4 m-auto\">\r\n\r\n              {posts.map((post) => {\r\n                return <Posts post={post} />;\r\n              })}\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"tab-pane fade\"\r\n              id=\"pills-profile\"\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"pills-profile-tab\"\r\n              tabIndex={0}\r\n            >\r\n                <section className=\"d-flex justify-content-around mt-4\">\r\n                     <div className=\"d-flex flex-column  col-5\">\r\n\r\n                {value.user.followers.map((pers, idx) => {\r\n                  return(\r\n                      <>\r\n                          \r\n                          <div onClick={()=>{window.location.href=\"/user/\"+pers._id}} className=\"d-flex align-items-center p-2  mb-3 rounded p-3 hover\">\r\n                            <div>\r\n                              <img\r\n                                src={pers.image}\r\n                                alt=\"profile\"\r\n                                style={{ width: 50 ,height:50}}\r\n                                className=\"me-3 rounded\"\r\n                              />\r\n                            </div>\r\n                            <h6 className=\" fw-bold\" style={{ color: 'white' }}>{pers.name}</h6>\r\n                            <i className=\"fa-solid fa-ellipsis ms-auto fs-4\" style={{ color: 'white' }} />\r\n                          </div>\r\n                      </>\r\n                    \r\n                  )\r\n                })}\r\n                   </div>\r\n              </section>\r\n            </div>\r\n            <div\r\n              className=\"tab-pane fade\"\r\n              id=\"pills-contact\"\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"pills-contact-tab\"\r\n              tabIndex={0}\r\n            >\r\n\r\n                  <section className=\"d-flex justify-content-around mt-4\">\r\n                     <div className=\"d-flex flex-column  col-5\">\r\n\r\n                {value.user.following.map((pers, idx) => {\r\n                  return(\r\n                      <>\r\n                         \r\n                     <div onClick={()=>{window.location.href=\"/user/\"+pers._id}} className=\"d-flex align-items-center p-2  mb-3 rounded p-3 hover\">\r\n                            <div>\r\n                              <img\r\n                                src={(pers.image)}\r\n                                alt=\"profile\"\r\n                                style={{ width: 50 ,height:50}}\r\n                                className=\"me-3 rounded\"\r\n                              />\r\n                            </div>\r\n                            <h6 className=\" fw-bold\" style={{ color: 'white' }}>{pers.name}</h6>\r\n                            <i className=\"fa-solid fa-ellipsis ms-auto fs-4\" style={{ color: 'white' }}/>\r\n                          </div>\r\n                      </>\r\n                    \r\n                  )\r\n                })}\r\n                   </div>\r\n              </section>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\Routing\\PrivateRoute.jsx",["173","174"],[],"import { useState } from 'react';\r\nimport {Navigate , Route} from 'react-router-dom'\r\n\r\n\r\nfunction PrivateRoute({ children }) {\r\n\r\n  const auth = localStorage.getItem(\"userInfo1\");\r\n\r\n\r\n  return auth ? children : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default  PrivateRoute\r\n","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\auth\\auth-help.js",[],[],"D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\NavBar.jsx",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208"],[],"import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport auth from './../auth/auth-help'\r\nimport jwt1 from 'jwt-decode' // import dependency\r\nimport logo from \"../images/IMG-20201113-WA0051.jpg\"; // with import\r\nimport { read } from '../api/api-post';\r\n \r\n\r\nimport Post from \"./Post\";\r\nimport Posts from \"./Posts\";\r\nimport { getSender } from \"../config/chatLogic\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport \"./chat.css\";\r\nimport { io } from \"socket.io-client\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { searchuser } from \"../api/api-post\";\r\nimport { getSenderFull } from \"../config/chatLogic\";\r\nimport FindPeople from \"./FindPeople\";\r\nimport Box from \"@mui/material/Box\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport MoonLoader from \"react-spinners/MoonLoader\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { getMessage } from \"../api/api-post\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { toast } from \"react-toastify\";\r\nconst NavBar = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const open1 = Boolean(anchorEl);\r\n\r\n      const [searchResult, setSearchResult] = useState([]);\r\n      const [open, setOpen] = useState(false);\r\nconst loading = searchResult.length != 0 && open;\r\n    const jwt = auth.isAuthenticated()\r\n  const user1 = jwt1(jwt.token);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = (chat) => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleClose1 = (notiy) => {\r\n    setAnchorEl(null);\r\n    // Get(chat)\r\n  };\r\n  function padTo2Digits(num) {\r\n  return String(num).padStart(2, '0');\r\n}\r\n  const nav=useNavigate();\r\n   const [values, setValues] = useState({\r\n  })\r\n\r\n\r\n  console.log(user1);\r\n\r\nuseEffect(() => {\r\n    searchuser(\r\n      {\r\n        userId: user1.id,\r\n      },\r\n      {\r\n        t: jwt.token,\r\n      },\r\n      {\r\n        search: search,\r\n      }\r\n    ).then((data) => {\r\n      if (search != \"\") setSearchResult(data);\r\n      else setSearchResult([]);\r\n    });\r\n  }, [search]);\r\n\r\n  useEffect(()=>{\r\n\r\n     read( {userId: user1.id\r\n    },{\r\n      t: jwt.token\r\n    },).then((data)=>{\r\n        if(data)\r\n        console.log(data)\r\n        setValues({...values,id:data._id,name:data.name , email:data.email , image:data.image , about:data.about,update:data.updated});\r\n    })\r\n    \r\n  },[])\r\n\r\n\r\n  return (\r\n    <div>\r\n    <nav className=\"py-2 position-fixed top-0 pr-4 start-0 w-100 shadow-sm\">\r\n  <div className=\"container d-flex justify-content-between align-items-center w-100 bg-black\">\r\n    <a style={{ textDecoration: \"none\", color: \"black\" }}>\r\n      <h1 onClick={()=>{nav('/')}}  className=\"logo fs-3 fw-bold\">SocietySpot</h1>\r\n    </a>\r\n    <div className=\"mr-5 position-relative d-flex\">\r\n      <Stack sx={{ width: 100}}> \r\n       <Autocomplete\r\n       className=\"rounded\"\r\n         size=\"small\"\r\n          id=\"asynchronous-demo\"\r\n          sx={{ width: 200 }}\r\n          options={searchResult}\r\n          loading={loading}\r\n          open={open}\r\n          onOpen={() => {\r\n            setOpen(true);\r\n          }}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            //setSearchResult([])\r\n          }}\r\n          onChange={(event, value) => nav(\"/user/\"+value._id)} // prints the selected value\r\n          autoHighlight\r\n          getOptionLabel={(option) => option.name}\r\n          renderOption={(props, option) => (\r\n            <Box\r\n              component=\"li\"\r\n              sx={{ \"& > img\": { mr: 2, flexShrink: 0 } }}\r\n              {...props}\r\n            >\r\n              <img\r\n                className=\"rounded-circle me-3\"\r\n                loading=\"lazy\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                src={option.image}\r\n                //srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\r\n                alt=\"\"\r\n              />\r\n              {option.name}\r\n            </Box>\r\n          )}\r\n          renderInput={(params) => (\r\n            <TextField\r\n            className={\"rounded bg-white\"}\r\n              sx={{ p: '0px' }}\r\n              size=\"small\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              {...params}\r\n              placeholder=\"Search To Chat\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <React.Fragment>\r\n                    {loading ? (\r\n                      <CircularProgress color=\"inherit\" size={20} />\r\n                    ) : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </React.Fragment>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Stack>\r\n    </div>\r\n    <div className=\"logo rounded-circle d-flex align-items-center\">\r\n      <i  className=\"fa-solid fa-right-to-bracket fs-3 me-4\" style={{ color: 'white' }} onClick={()=>{\r\n        localStorage.removeItem(\"userInfo1\")\r\n         nav('/')\r\n        }} />\r\n      <i className=\"fa fa-paper-plane me-4 fs-3\"  style={{ color: 'white' }} onClick={()=>{nav('/chat/join')}} />\r\n      <div  onClick={()=>{nav('/user/'+values.id)}}>\r\n        <img\r\n          src={values.image}\r\n          alt=\"profile\"\r\n          width=\"40px\"\r\n          height=\"40px\"\r\n          className=\"rounded-circle\"\r\n         \r\n        />\r\n        </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n    {/*---------------------------------------------------------navbar----------------------------------------------------------*/}\r\n  \r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Posts.jsx",["209","210","211","212","213","214","215","216","217"],[],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport auth from './../auth/auth-help'\r\nimport jwt1 from 'jwt-decode' // import dependency\r\nimport { useEffect } from 'react';\r\nimport {getFeed} from \"../api/api-post\"\r\nimport {Like, unlike,comment,remove} from '../api/api-post.js'\r\nimport Comment from './Comment'\r\nimport { read } from '../api/api-post';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nimport { useNavigate } from 'react-router'\r\n\r\n\r\nconst Posts = (props) => {\r\n  const nav = useNavigate()\r\n  const [image, setImage] =useState(\"\")\r\n  const [name, setName] =useState(\"\")\r\n  let x = props.post.caption;\r\n  let [caption,setCaption]=useState(x?x.substr(0,300):\"\")\r\n\r\n\r\n  \r\n \r\n const jwt = auth.isAuthenticated()\r\n   const user1 = jwt1(jwt.token);\r\n  const checkLike = (likes) => {\r\n    let match = likes.indexOf(user1.id) !== -1\r\n    return match\r\n  }\r\n\r\n  useEffect(() => {\r\n    read({ userId: user1.id }, { t: jwt.token }).then((res) => {\r\n      if (res.name) {\r\n        setImage(res.image);\r\n        setName(res.name)\r\n      }\r\n    });\r\n  }, [user1.id]);\r\n  const [values, setValues] = useState({\r\n    like: checkLike(props.post.likes),\r\n    likes: props.post.likes.length,\r\n    comments: props.post.comments,\r\n\r\n  })\r\n\r\n  \r\n\r\n   const [text, setText] = useState('')\r\n   const handleChange = event => {\r\n    setText(event.target.value)\r\n  }\r\n  const [clickC , setC]=useState(0);\r\n  const [C , sC]=useState(0);\r\n\r\n\r\n\r\n  \r\n\r\n  const updateComments = (comments) => {\r\n    setValues({...values, comments: comments})\r\n  }\r\n  \r\n\r\n   const clickLike  = ()=> {\r\n\r\n    let callApi = values.like ? unlike : Like\r\n\r\n       callApi({userId : user1.id} ,\r\n        {t:jwt.token},\r\n           props.post._id\r\n        ).then((data)=>{\r\n          if(data)\r\n          {\r\n            setValues({...values, like: !values.like, likes: data.likes.length})\r\n          }\r\n        })\r\n   }\r\n\r\n const addComment = () => {\r\n      \r\n  console.log(values.comments)\r\n    if(text){\r\n      comment({\r\n        userId: user1.id\r\n      }, {\r\n        t: jwt.token\r\n      }, props.post._id, {text: text}).then((data) => {\r\n        if (data) {\r\n          setText('')\r\n          updateComments(data.comments)\r\n        } else {\r\n         console.log(\"error\")\r\n        }\r\n      })\r\n    }\r\n    if(!clickC)\r\n       setC(true)\r\n\r\n     if(!C)\r\n       sC(true)\r\n       \r\n  \r\n}\r\n\r\n\r\nconst deletePost =()=>{\r\n\r\n  remove({postId :props.post._id},{ t: jwt.token}).then((data)=>{\r\n    props.updatePosts(data);\r\n  })\r\n}\r\nconst handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      addComment();\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n  <section className=\"posts border border_radius border-secondary mt-3  overflow-hidden p-0 white border position-relative\">\r\n        {props.post.userDetails.id==user1.id ? <i className=\"fa-regular fa-trash-can position-absolute pt-4 fs-5 trash\" onClick={deletePost}/>:null}\r\n\r\n  <div className=\"name d-flex pl-3 pt-3\">\r\n    <div>\r\n      <img\r\n        src={props.post.author.image}\r\n        alt=\"profile\"\r\n        style={{ width: 50  ,height:50}}\r\n        className=\"rounded-circle me-3\"\r\n      />\r\n    </div>\r\n    \r\n    <div>\r\n      <p onClick={()=>{\r\n           nav('/user/'+props.post.userDetails.id)\r\n      }} className=\"mb-0 fw-bold fs-5\">{props.post.author.name}</p>\r\n      <p className=\"text\" style={{color: '#000'}}>{new Date(props.post.created).toLocaleString()}</p>\r\n    </div>\r\n  </div>      \r\n\r\n  <h5 className=\"mt-0 ml-1\">\r\n  <p className='fff'>{caption}{props.post.caption&&props.post.caption.length>300?\r\n    (<a onClick={()=>{\r\n      setCaption(props.post.caption)\r\n      props.post.caption=\"\"\r\n    }} className=\"badge badge text-primary\">...show more</a>):null}</p>\r\n    \r\n  </h5>\r\n  \r\n  {props.post.photo&&<div className=\"\">\r\n    <img src={props.post.photo} alt=\"\" className=\"w-100\" />\r\n  </div>}\r\n  <div className=\" d-flex justify-content-between p-3 align-items-center border-bottom \">\r\n    <div className=\"d-flex \">\r\n      <div className=\"d-flex me-5\">\r\n        {!values.like ? <i onClick={clickLike} class=\"fa-regular me-2  fs-2 fa-heart\"></i>\r\n        :<i onClick={clickLike} className=\"fa-solid fa-heart fs-2 heart me-2\" />}\r\n        <h5>{values.likes}</h5>\r\n      </div>\r\n      <div className=\"d-flex me-5\">\r\n        <i onClick={()=>{setC(!clickC)}} className=\"fa-regular fa-comment fs-2 me-2\" />\r\n        <h5>{values.comments.length}</h5>\r\n      </div>\r\n    </div>\r\n  </div>\r\n     {clickC?<Comment updateComments={updateComments} postId={props.post._id} comments={values.comments}/>:null}\r\n      <section className=\"comments pb-3 pt-3 d-flex align-items-end\">\r\n\r\n                        <div className=\" ms-4 pt-3 d-flex align-items-center w-75 me-4 \">\r\n                            <input  value={text} onChange={handleChange} className=\"form-control pb-2\" placeholder=\"Add a comment...\" onKeyDown={handleKeyDown}/>\r\n                        </div>        \r\n                    </section>\r\n\r\n</section>\r\n\r\n</div>\r\n    );\r\n}\r\nexport default Posts","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\api\\api-post.js",["218","219"],[],"\r\n\r\n\r\n\r\nconst create = async (params, credentials, post) => {\r\n\r\n  try {\r\n       const requestOptions = {\r\n        method: 'POST',\r\n        headers: { \r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n       'Authorization': credentials.t\r\n        },\r\n        authorization : credentials.t,\r\n        body: JSON.stringify(post), \r\n    };\r\n\r\n  let response = await fetch('/api/post/'+params.userId,requestOptions)\r\n\r\n    const Data = await response.json();\r\n     return Data;\r\n  } catch(err) {\r\n    return err\r\n  }\r\n}\r\n\r\nconst getFeed = async (params, credentials,signal)=>{\r\n       try {\r\n       const requestOptions = {\r\n        method: 'Get',\r\n        signal: signal,\r\n        headers: { \r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t\r\n        },\r\n        authorization : credentials.t,\r\n        \r\n    };\r\n\r\n    let response = await fetch('/api/post/feed/'+params.userId,requestOptions)\r\n\r\n    const Data =  response.json();\r\n     return Data;\r\n  } catch(err) {\r\n    return err\r\n  }\r\n\r\n\r\n}\r\n\r\nconst getFeedUser = async (params, credentials,signal)=>{\r\n       try {\r\n       const requestOptions = {\r\n        method: 'Get',\r\n        signal: signal,\r\n        headers: { \r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t\r\n        },\r\n        authorization : credentials.t,\r\n        \r\n    };\r\n\r\n    let response = await fetch('/api/post/feedUser/'+params.userId,requestOptions)\r\n\r\n    const Data = await response.json();\r\n     return Data;\r\n  } catch(err) {\r\n    return err\r\n  }\r\n\r\n\r\n}\r\nconst findPeoplee = async (params, credentials,signal) => {\r\n  try {\r\n    let response = await fetch('/api/users/findpeople/' + params.userId, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t,\r\n         signal: signal,\r\n\r\n      }\r\n    })    \r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\nconst remove = async (params, credentials) => {\r\n  try {\r\n    let response = await fetch('/api/post/' + params.postId, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t\r\n      }\r\n    })\r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst follow =async (params, credentials, followId)=>{\r\n\r\n  console.log(\"fl\")\r\n\r\ntry {\r\n    let response = await fetch('/api/users/follow/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t\r\n      },\r\n      body: JSON.stringify({userId:params.userId, followId: followId})\r\n    })\r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n\r\n}\r\n\r\nconst unfollow =async (params, credentials, unfollowId)=>{\r\n  console.log(\"unfl\")\r\n\r\n\r\n\r\ntry {\r\n    let response = await fetch('/api/users/unfollow/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t\r\n      },\r\n      body: JSON.stringify({userId:params.userId, unfollowId: unfollowId})\r\n    })\r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n\r\n}\r\n\r\nconst Like =async(params ,credentials, postId  )=>{\r\n\r\n  try {\r\n    \r\n    let response = await fetch('/api/post/like',\r\n    {\r\n      method :'PUT',\r\n      headers:{\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t\r\n      },\r\n      body :JSON.stringify({userId:params.userId, postId: postId})\r\n    })\r\n    return await response.json()\r\n\r\n  } catch (error) {\r\n        console.log(error)\r\n  }\r\n}\r\n\r\n\r\nconst unlike =async(params ,credentials, postId  )=>{\r\n\r\n  try {\r\n    \r\n    let response = await fetch('/api/post/unlike',\r\n    {\r\n      method :'PUT',\r\n      headers:{\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t\r\n      },\r\n      body :JSON.stringify({userId:params.userId, postId: postId})\r\n    })\r\n    return await response.json()\r\n\r\n  } catch (error) {\r\n        console.log(error)\r\n  }\r\n}\r\n\r\nconst comment = async (params, credentials, postId, comment) => {\r\n  try {\r\n    let response = await fetch('/api/post/comment/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t\r\n      },\r\n      body: JSON.stringify({userId:params.userId, postId: postId, comment: comment})\r\n    })\r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst read = async (params, credentials, signal) => {\r\n  try {\r\n    let response = await fetch('/api/users/' + params.userId, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t\r\n      }\r\n  })\r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\nconst checkFollow = (user,jwt) => {\r\n    const match = user.followers.some((follower)=> {\r\n      return follower._id == jwt\r\n    })\r\n    return match\r\n  }\r\n\r\n\r\n\r\nconst update = async (params, credentials, Values) => {\r\n  let v = {name:\"FFF\"}\r\n  try {\r\n    let response = await fetch('/api/users/update/' + params.userId, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization':credentials.t\r\n      },\r\n      body:  JSON.stringify(Values),\r\n    })\r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\nconst uncomment = async (params, credentials, postId, comment) => {\r\nconsole.log(params.userId , postId , comment)\r\n\r\n  try {\r\n    let response = await fetch('/api/post/uncomment/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization':credentials.t\r\n      },\r\n      body: JSON.stringify({userId:params.userId, postId: postId, comment: comment})\r\n    })\r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst searchuser = async (params, credentials,se) => {\r\n  console.log(se);\r\n  try {\r\n    let response = await fetch(`/api/users/?search=${se.search}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t,\r\n      }\r\n    })    \r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst getChat = async (params, credentials,se) => {\r\n  try {\r\n    let response = await fetch(`/api/chat/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t,\r\n      },\r\n      body: JSON.stringify({userId:params.userId,id:se})\r\n    })    \r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst getMessage = async (params, credentials,se) => {\r\n  console.log(se)\r\n  try {\r\n    let response = await fetch(`/api/message/${se}`, {\r\n      method: 'Get',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t,\r\n      }\r\n    })    \r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst setMessage = async (params, credentials,se) => {\r\n  console.log(params)\r\n  try {\r\n    let response = await fetch(`/api/message/`, {\r\n      method: 'Post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t,\r\n      },\r\n      body:JSON.stringify(params)\r\n    })    \r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\n\r\nconst fetchChats = async (params, credentials,se) => {\r\n  try {\r\n    let response = await fetch(`/api/chat/`, {\r\n      method: 'Get',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': credentials.t,\r\n      }\r\n    })    \r\n    return await response.json()\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\n\r\nexport  {searchuser,fetchChats,setMessage,getChat,getMessage,create,update,remove,getFeed,findPeoplee,follow,unfollow,Like,unlike,comment,uncomment,read,checkFollow,getFeedUser}\r\n","D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\config\\chatLogic.js",[],[],"D:\\5th Sem\\Web Technologies\\WT PROJECT\\Social\\Social-Networking-Mern\\FrontEnd\\src\\component\\Comment.jsx",["220","221","222"],[],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport { uncomment } from '../api/api-post';\r\nimport auth from './../auth/auth-help'\r\nimport jwt1 from 'jwt-decode' // import dependency\r\n\r\nconst Comment = (props) => {\r\nlet [st , Setst]=useState(0)\r\nlet [x , setx]=useState(2)\r\nlet [comments,setComments]=useState(props.comments)\r\nconst jwt = auth.isAuthenticated()\r\nconst user1 = jwt1(jwt.token);\r\nconsole.log(props.comments)\r\n\r\nconst deleteComment = comment => event => {\r\n    uncomment({\r\n      userId: user1.id\r\n    }, {\r\n      t: jwt.token\r\n    }, props.postId,comment).then((data)=>{\r\n      props.updateComments(data.comments)\r\n    })\r\n  }\r\n\r\n  return (\r\n      <>\r\n    <div>\r\n    {comments.length>0 ?\r\n       <section className=\"d-flex flex-column white border_radius  p-2\">\r\n       {props.comments.slice(st,x).map((item)=>{\r\n           return ( \r\n    <div>\r\n    \r\n  <div className=\" pt-3 d-flex align-items-start me-4\">\r\n  <div className=\"name d-flex \">\r\n    <div>\r\n      <img\r\n        src={item.commentedBy.image}\r\n        alt=\"profile\"\r\n        style={{ width: 50 ,height:50}}\r\n        className=\"rounded-circle me-3\"\r\n      />\r\n    </div>\r\n    <div>\r\n      \r\n\r\n      {item.commentedBy._id==user1.id ?<i onClick={deleteComment(item)} className=\"fa-regular fa-trash-can position-absolute fs-5 mr-3 trash\" />:null}\r\n      <h5 className=\"mb-1 text fs-5\">{item.commentedBy.name}</h5>\r\n      <p className=\"comment-text-sm\">{item.text}</p>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <div className=\"border-bottom d-flex ps-5\">\r\n  </div>\r\n    \r\n  \r\n </div> \r\n           )\r\n\r\n       })}\r\n  {comments.length>=2 ?<button  className=\"btn btn-light\" onClick={()=>{setx(x+4)}}>show more</button> :null} \r\n</section>:null}\r\n\r\n    </div>\r\n</>\r\n  )\r\n}\r\n\r\nexport default Comment",{"ruleId":"223","severity":1,"message":"224","line":8,"column":8,"nodeType":"225","messageId":"226","endLine":8,"endColumn":12},{"ruleId":"223","severity":1,"message":"227","line":10,"column":26,"nodeType":"225","messageId":"226","endLine":10,"endColumn":31},{"ruleId":"223","severity":1,"message":"228","line":11,"column":8,"nodeType":"225","messageId":"226","endLine":11,"endColumn":18},{"ruleId":"223","severity":1,"message":"229","line":17,"column":10,"nodeType":"225","messageId":"226","endLine":17,"endColumn":20},{"ruleId":"223","severity":1,"message":"230","line":50,"column":7,"nodeType":"225","messageId":"226","endLine":50,"endColumn":13},{"ruleId":"223","severity":1,"message":"231","line":51,"column":7,"nodeType":"225","messageId":"226","endLine":51,"endColumn":14},{"ruleId":"223","severity":1,"message":"232","line":11,"column":8,"nodeType":"225","messageId":"226","endLine":11,"endColumn":20},{"ruleId":"223","severity":1,"message":"233","line":15,"column":10,"nodeType":"225","messageId":"226","endLine":15,"endColumn":29},{"ruleId":"234","severity":1,"message":"235","line":54,"column":3,"nodeType":"236","endLine":54,"endColumn":5,"suggestions":"237"},{"ruleId":"223","severity":1,"message":"238","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"223","severity":1,"message":"239","line":3,"column":10,"nodeType":"225","messageId":"226","endLine":3,"endColumn":16},{"ruleId":"223","severity":1,"message":"240","line":3,"column":18,"nodeType":"225","messageId":"226","endLine":3,"endColumn":29},{"ruleId":"223","severity":1,"message":"241","line":13,"column":15,"nodeType":"225","messageId":"226","endLine":13,"endColumn":23},{"ruleId":"234","severity":1,"message":"242","line":23,"column":5,"nodeType":"236","endLine":23,"endColumn":14,"suggestions":"243"},{"ruleId":"234","severity":1,"message":"244","line":40,"column":6,"nodeType":"236","endLine":40,"endColumn":8,"suggestions":"245"},{"ruleId":"223","severity":1,"message":"246","line":5,"column":10,"nodeType":"225","messageId":"226","endLine":5,"endColumn":19},{"ruleId":"223","severity":1,"message":"238","line":10,"column":8,"nodeType":"225","messageId":"226","endLine":10,"endColumn":13},{"ruleId":"223","severity":1,"message":"247","line":11,"column":10,"nodeType":"225","messageId":"226","endLine":11,"endColumn":20},{"ruleId":"223","severity":1,"message":"241","line":9,"column":13,"nodeType":"225","messageId":"226","endLine":9,"endColumn":21},{"ruleId":"234","severity":1,"message":"242","line":18,"column":5,"nodeType":"236","endLine":18,"endColumn":14,"suggestions":"248"},{"ruleId":"223","severity":1,"message":"249","line":6,"column":8,"nodeType":"225","messageId":"226","endLine":6,"endColumn":12},{"ruleId":"223","severity":1,"message":"250","line":9,"column":8,"nodeType":"225","messageId":"226","endLine":9,"endColumn":19},{"ruleId":"223","severity":1,"message":"251","line":22,"column":10,"nodeType":"225","messageId":"226","endLine":22,"endColumn":20},{"ruleId":"223","severity":1,"message":"252","line":22,"column":22,"nodeType":"225","messageId":"226","endLine":22,"endColumn":35},{"ruleId":"234","severity":1,"message":"253","line":44,"column":5,"nodeType":"236","endLine":44,"endColumn":7,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":86,"column":9,"nodeType":"257","messageId":"258","endLine":90,"endColumn":10},{"ruleId":"259","severity":1,"message":"260","line":140,"column":31,"nodeType":"261","messageId":"262","endLine":140,"endColumn":33},{"ruleId":"223","severity":1,"message":"224","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":12},{"ruleId":"223","severity":1,"message":"263","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":13},{"ruleId":"223","severity":1,"message":"264","line":7,"column":8,"nodeType":"225","messageId":"226","endLine":7,"endColumn":14},{"ruleId":"223","severity":1,"message":"265","line":10,"column":8,"nodeType":"225","messageId":"226","endLine":10,"endColumn":15},{"ruleId":"223","severity":1,"message":"266","line":13,"column":8,"nodeType":"225","messageId":"226","endLine":13,"endColumn":18},{"ruleId":"223","severity":1,"message":"239","line":14,"column":8,"nodeType":"225","messageId":"226","endLine":14,"endColumn":14},{"ruleId":"223","severity":1,"message":"267","line":17,"column":8,"nodeType":"225","messageId":"226","endLine":17,"endColumn":16},{"ruleId":"223","severity":1,"message":"268","line":22,"column":10,"nodeType":"225","messageId":"226","endLine":22,"endColumn":20},{"ruleId":"223","severity":1,"message":"228","line":25,"column":8,"nodeType":"225","messageId":"226","endLine":25,"endColumn":18},{"ruleId":"223","severity":1,"message":"269","line":28,"column":10,"nodeType":"225","messageId":"226","endLine":28,"endColumn":21},{"ruleId":"223","severity":1,"message":"232","line":32,"column":8,"nodeType":"225","messageId":"226","endLine":32,"endColumn":20},{"ruleId":"223","severity":1,"message":"270","line":33,"column":8,"nodeType":"225","messageId":"226","endLine":33,"endColumn":18},{"ruleId":"223","severity":1,"message":"271","line":38,"column":8,"nodeType":"225","messageId":"226","endLine":38,"endColumn":20},{"ruleId":"223","severity":1,"message":"227","line":40,"column":10,"nodeType":"225","messageId":"226","endLine":40,"endColumn":15},{"ruleId":"223","severity":1,"message":"272","line":42,"column":3,"nodeType":"225","messageId":"226","endLine":42,"endColumn":16},{"ruleId":"223","severity":1,"message":"273","line":43,"column":3,"nodeType":"225","messageId":"226","endLine":43,"endColumn":15},{"ruleId":"223","severity":1,"message":"274","line":63,"column":10,"nodeType":"225","messageId":"226","endLine":63,"endColumn":15},{"ruleId":"223","severity":1,"message":"275","line":63,"column":17,"nodeType":"225","messageId":"226","endLine":63,"endColumn":25},{"ruleId":"259","severity":1,"message":"260","line":68,"column":39,"nodeType":"261","messageId":"262","endLine":68,"endColumn":41},{"ruleId":"223","severity":1,"message":"276","line":71,"column":10,"nodeType":"225","messageId":"226","endLine":71,"endColumn":14},{"ruleId":"223","severity":1,"message":"277","line":71,"column":16,"nodeType":"225","messageId":"226","endLine":71,"endColumn":23},{"ruleId":"223","severity":1,"message":"278","line":73,"column":10,"nodeType":"225","messageId":"226","endLine":73,"endColumn":11},{"ruleId":"223","severity":1,"message":"279","line":73,"column":13,"nodeType":"225","messageId":"226","endLine":73,"endColumn":15},{"ruleId":"223","severity":1,"message":"280","line":90,"column":12,"nodeType":"225","messageId":"226","endLine":90,"endColumn":24},{"ruleId":"259","severity":1,"message":"260","line":167,"column":18,"nodeType":"261","messageId":"262","endLine":167,"endColumn":20},{"ruleId":"234","severity":1,"message":"235","line":170,"column":6,"nodeType":"236","endLine":170,"endColumn":14,"suggestions":"281"},{"ruleId":"234","severity":1,"message":"282","line":175,"column":6,"nodeType":"236","endLine":175,"endColumn":12,"suggestions":"283"},{"ruleId":"234","severity":1,"message":"284","line":184,"column":6,"nodeType":"236","endLine":184,"endColumn":8,"suggestions":"285"},{"ruleId":"234","severity":1,"message":"235","line":198,"column":6,"nodeType":"236","endLine":198,"endColumn":18,"suggestions":"286"},{"ruleId":"259","severity":1,"message":"287","line":227,"column":14,"nodeType":"261","messageId":"262","endLine":227,"endColumn":16},{"ruleId":"259","severity":1,"message":"287","line":387,"column":40,"nodeType":"261","messageId":"262","endLine":387,"endColumn":42},{"ruleId":"223","severity":1,"message":"288","line":14,"column":23,"nodeType":"225","messageId":"226","endLine":14,"endColumn":27},{"ruleId":"223","severity":1,"message":"249","line":16,"column":8,"nodeType":"225","messageId":"226","endLine":16,"endColumn":12},{"ruleId":"234","severity":1,"message":"289","line":42,"column":6,"nodeType":"236","endLine":42,"endColumn":16,"suggestions":"290"},{"ruleId":"259","severity":1,"message":"287","line":55,"column":36,"nodeType":"261","messageId":"262","endLine":55,"endColumn":38},{"ruleId":"259","severity":1,"message":"260","line":109,"column":24,"nodeType":"261","messageId":"262","endLine":109,"endColumn":26},{"ruleId":"223","severity":1,"message":"291","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":18},{"ruleId":"223","severity":1,"message":"292","line":2,"column":20,"nodeType":"225","messageId":"226","endLine":2,"endColumn":25},{"ruleId":"223","severity":1,"message":"249","line":8,"column":8,"nodeType":"225","messageId":"226","endLine":8,"endColumn":12},{"ruleId":"223","severity":1,"message":"224","line":12,"column":8,"nodeType":"225","messageId":"226","endLine":12,"endColumn":12},{"ruleId":"223","severity":1,"message":"263","line":13,"column":8,"nodeType":"225","messageId":"226","endLine":13,"endColumn":13},{"ruleId":"223","severity":1,"message":"293","line":14,"column":10,"nodeType":"225","messageId":"226","endLine":14,"endColumn":19},{"ruleId":"223","severity":1,"message":"264","line":15,"column":8,"nodeType":"225","messageId":"226","endLine":15,"endColumn":14},{"ruleId":"223","severity":1,"message":"265","line":16,"column":8,"nodeType":"225","messageId":"226","endLine":16,"endColumn":15},{"ruleId":"223","severity":1,"message":"294","line":18,"column":10,"nodeType":"225","messageId":"226","endLine":18,"endColumn":12},{"ruleId":"223","severity":1,"message":"266","line":19,"column":8,"nodeType":"225","messageId":"226","endLine":19,"endColumn":18},{"ruleId":"223","severity":1,"message":"239","line":20,"column":8,"nodeType":"225","messageId":"226","endLine":20,"endColumn":14},{"ruleId":"223","severity":1,"message":"295","line":21,"column":8,"nodeType":"225","messageId":"226","endLine":21,"endColumn":12},{"ruleId":"223","severity":1,"message":"296","line":22,"column":8,"nodeType":"225","messageId":"226","endLine":22,"endColumn":18},{"ruleId":"223","severity":1,"message":"267","line":23,"column":8,"nodeType":"225","messageId":"226","endLine":23,"endColumn":16},{"ruleId":"223","severity":1,"message":"297","line":24,"column":8,"nodeType":"225","messageId":"226","endLine":24,"endColumn":16},{"ruleId":"223","severity":1,"message":"298","line":25,"column":8,"nodeType":"225","messageId":"226","endLine":25,"endColumn":12},{"ruleId":"223","severity":1,"message":"299","line":26,"column":8,"nodeType":"225","messageId":"226","endLine":26,"endColumn":13},{"ruleId":"223","severity":1,"message":"300","line":27,"column":8,"nodeType":"225","messageId":"226","endLine":27,"endColumn":16},{"ruleId":"223","severity":1,"message":"268","line":28,"column":10,"nodeType":"225","messageId":"226","endLine":28,"endColumn":20},{"ruleId":"223","severity":1,"message":"301","line":30,"column":10,"nodeType":"225","messageId":"226","endLine":30,"endColumn":23},{"ruleId":"223","severity":1,"message":"228","line":31,"column":8,"nodeType":"225","messageId":"226","endLine":31,"endColumn":18},{"ruleId":"223","severity":1,"message":"232","line":33,"column":8,"nodeType":"225","messageId":"226","endLine":33,"endColumn":20},{"ruleId":"223","severity":1,"message":"270","line":34,"column":8,"nodeType":"225","messageId":"226","endLine":34,"endColumn":18},{"ruleId":"223","severity":1,"message":"302","line":37,"column":10,"nodeType":"225","messageId":"226","endLine":37,"endColumn":20},{"ruleId":"223","severity":1,"message":"271","line":39,"column":8,"nodeType":"225","messageId":"226","endLine":39,"endColumn":20},{"ruleId":"223","severity":1,"message":"227","line":41,"column":10,"nodeType":"225","messageId":"226","endLine":41,"endColumn":15},{"ruleId":"223","severity":1,"message":"303","line":46,"column":11,"nodeType":"225","messageId":"226","endLine":46,"endColumn":16},{"ruleId":"259","severity":1,"message":"260","line":50,"column":37,"nodeType":"261","messageId":"262","endLine":50,"endColumn":39},{"ruleId":"223","severity":1,"message":"304","line":53,"column":9,"nodeType":"225","messageId":"226","endLine":53,"endColumn":20},{"ruleId":"223","severity":1,"message":"305","line":56,"column":9,"nodeType":"225","messageId":"226","endLine":56,"endColumn":20},{"ruleId":"223","severity":1,"message":"306","line":59,"column":9,"nodeType":"225","messageId":"226","endLine":59,"endColumn":21},{"ruleId":"223","severity":1,"message":"280","line":63,"column":12,"nodeType":"225","messageId":"226","endLine":63,"endColumn":24},{"ruleId":"259","severity":1,"message":"260","line":85,"column":18,"nodeType":"261","messageId":"262","endLine":85,"endColumn":20},{"ruleId":"234","severity":1,"message":"235","line":88,"column":6,"nodeType":"236","endLine":88,"endColumn":14,"suggestions":"307"},{"ruleId":"234","severity":1,"message":"253","line":101,"column":5,"nodeType":"236","endLine":101,"endColumn":7,"suggestions":"308"},{"ruleId":"309","severity":1,"message":"310","line":108,"column":5,"nodeType":"311","endLine":108,"endColumn":59},{"ruleId":"223","severity":1,"message":"312","line":6,"column":9,"nodeType":"225","messageId":"226","endLine":6,"endColumn":16},{"ruleId":"223","severity":1,"message":"239","line":10,"column":8,"nodeType":"225","messageId":"226","endLine":10,"endColumn":14},{"ruleId":"223","severity":1,"message":"313","line":11,"column":8,"nodeType":"225","messageId":"226","endLine":11,"endColumn":18},{"ruleId":"223","severity":1,"message":"267","line":12,"column":8,"nodeType":"225","messageId":"226","endLine":12,"endColumn":16},{"ruleId":"223","severity":1,"message":"314","line":19,"column":10,"nodeType":"225","messageId":"226","endLine":19,"endColumn":15},{"ruleId":"223","severity":1,"message":"315","line":20,"column":10,"nodeType":"225","messageId":"226","endLine":20,"endColumn":14},{"ruleId":"234","severity":1,"message":"316","line":41,"column":6,"nodeType":"236","endLine":41,"endColumn":16,"suggestions":"317"},{"ruleId":"259","severity":1,"message":"287","line":123,"column":35,"nodeType":"261","messageId":"262","endLine":123,"endColumn":37},{"ruleId":"309","severity":1,"message":"310","line":145,"column":6,"nodeType":"311","endLine":148,"endColumn":45},{"ruleId":"259","severity":1,"message":"287","line":230,"column":27,"nodeType":"261","messageId":"262","endLine":230,"endColumn":29},{"ruleId":"223","severity":1,"message":"318","line":238,"column":7,"nodeType":"225","messageId":"226","endLine":238,"endColumn":8},{"ruleId":"223","severity":1,"message":"319","line":8,"column":11,"nodeType":"225","messageId":"226","endLine":8,"endColumn":16},{"ruleId":"223","severity":1,"message":"320","line":10,"column":15,"nodeType":"225","messageId":"226","endLine":10,"endColumn":26},{"ruleId":"259","severity":1,"message":"287","line":47,"column":28,"nodeType":"261","messageId":"262","endLine":47,"endColumn":30},"no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'FindPeople' is defined but never used.","'HashRouter' is defined but never used.","'Public' is assigned a value but never used.","'Private' is assigned a value but never used.","'BounceLoader' is defined but never used.","'listItemTextClasses' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'jwt.token' and 'user1.id'. Either include them or remove the dependency array.","ArrayExpression",["321"],"'axios' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'setColor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'nav'. Either include it or remove the dependency array.",["322"],"React Hook useEffect has missing dependencies: 'jwt.token', 'signal', 'user1.id', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["323"],"'useEffect' is defined but never used.","'useReducer' is defined but never used.",["324"],"'logo' is defined but never used.","'PulseLoader' is defined but never used.","'picLoading' is assigned a value but never used.","'setPicLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'jwt.token', 'user1.id', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["325"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Posts' is defined but never used.","'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'IconButton' is defined but never used.","'SendIcon' is defined but never used.","'Typography' is defined but never used.","'useNavigate' is defined but never used.","'MoonLoader' is defined but never used.","'DarkModeIcon' is defined but never used.","'isLastMessage' is defined but never used.","'isSameSender' is defined but never used.","'lastM' is assigned a value but never used.","'setLastM' is assigned a value but never used.","'mode' is assigned a value but never used.","'setMode' is assigned a value but never used.","'l' is assigned a value but never used.","'sl' is assigned a value but never used.","'padTo2Digits' is defined but never used.",["326"],"React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["327"],"React Hook useEffect has a missing dependency: 'user1'. Either include it or remove the dependency array.",["328"],["329"],"Expected '===' and instead saw '=='.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'jwt.token', 'loadPost', 'params.id', and 'value'. Either include them or remove the dependency array. You can also do a functional update 'SetValues(v => ...)' if you only need 'value' in the 'SetValues' call.",["330"],"'useState' is defined but never used.","'Route' is defined but never used.","'getSender' is defined but never used.","'io' is defined but never used.","'Menu' is defined but never used.","'GridLoader' is defined but never used.","'MenuItem' is defined but never used.","'Fade' is defined but never used.","'Badge' is defined but never used.","'MailIcon' is defined but never used.","'getSenderFull' is defined but never used.","'getMessage' is defined but never used.","'open1' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleClose1' is assigned a value but never used.",["331"],["332"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'getFeed' is defined but never used.","'DeleteIcon' is defined but never used.","'image' is assigned a value but never used.","'name' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'jwt.token'. Either include it or remove the dependency array.",["333"],"'v' is assigned a value but never used.","'Setst' is assigned a value but never used.","'setComments' is assigned a value but never used.",{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"336","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"343","fix":"353"},{"desc":"341","fix":"354"},{"desc":"334","fix":"355"},"Update the dependencies array to be: [jwt.token, user1.id]",{"range":"356","text":"357"},"Update the dependencies array to be: [history, nav]",{"range":"358","text":"359"},"Update the dependencies array to be: [jwt.token, signal, user1.id, values]",{"range":"360","text":"361"},{"range":"362","text":"359"},"Update the dependencies array to be: [jwt.token, user1.id, values]",{"range":"363","text":"364"},"Update the dependencies array to be: [jwt.token, search, user1.id]",{"range":"365","text":"366"},"Update the dependencies array to be: [chat, fetchMessages]",{"range":"367","text":"368"},"Update the dependencies array to be: [user1]",{"range":"369","text":"370"},"Update the dependencies array to be: [fetchAgain, jwt.token, user1.id]",{"range":"371","text":"372"},"Update the dependencies array to be: [jwt.token, loadPost, params.id, user1.id, value]",{"range":"373","text":"374"},{"range":"375","text":"366"},{"range":"376","text":"364"},{"range":"377","text":"357"},[1371,1373],"[jwt.token, user1.id]",[633,642],"[history, nav]",[969,971],"[jwt.token, signal, user1.id, values]",[493,502],[1288,1290],"[jwt.token, user1.id, values]",[5096,5104],"[jwt.token, search, user1.id]",[5191,5197],"[chat, fetchMessages]",[5493,5495],"[user1]",[5723,5735],"[fetchAgain, jwt.token, user1.id]",[1315,1325],"[jwt.token, loadPost, params.id, user1.id, value]",[2828,2836],[3146,3148],[1174,1184]]